{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","_useState5","_useState6","validated","setValidated","hasError","trim","unvalidatedData","htmlFor","classNames","type","placeholder","event","target","onBlur","test","NewMovie","_ref$onAdd","onAdd","_useState2","count","setCount","newMovie","setNewMovie","validForm","setValidForm","useEffect","document","querySelectorAll","length","onSubmit","e","preventDefault","_objectSpread","disabled","App","moviesFromServer","movieList","setMovieList","prevMoviesList","_toConsumableArray","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e7861410.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\n// eslint-disable-next-line max-len\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const [validated, setValidated] = useState(true);\n\n  const hasError = touched && required && !value.trim();\n  const unvalidatedData = value && !validated;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => {\n            setToched(true);\n            if (name === 'imgUrl' || name === 'imdbUrl') {\n              setValidated(pattern.test(value));\n            }\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {unvalidatedData && (\n        <p className=\"help is-danger\">{`${label} should have the valid format`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd = () => {} }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n  const [validForm, setValidForm] = useState(false);\n\n  useEffect(() => {\n    const {\n      title, imgUrl, imdbUrl, imdbId,\n    } = newMovie;\n\n    setValidForm(\n      (!!title.trim() && !!imgUrl && !!imdbUrl && !!imdbId.trim())\n      && document.querySelectorAll('.is-danger').length === 0,\n    );\n  }, [newMovie]);\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        if (validForm) {\n          onAdd(newMovie);\n          setCount(count + 1);\n          setNewMovie({\n            title: '',\n            description: '',\n            imgUrl: '',\n            imdbUrl: '',\n            imdbId: '',\n          });\n        }\n      }}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={(event) => {\n          setNewMovie({ ...newMovie, title: event });\n        }}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={(event) => {\n          setNewMovie({ ...newMovie, description: event });\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={(event) => {\n          setNewMovie({ ...newMovie, imgUrl: event });\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={(event) => {\n          setNewMovie({ ...newMovie, imdbUrl: event });\n        }}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={(event) => {\n          setNewMovie({ ...newMovie, imdbId: event });\n        }}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!validForm}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movieList, setMovieList] = useState(moviesFromServer);\n  const handleAdd = (newMovie: Movie) => {\n    setMovieList((prevMoviesList) => [...prevMoviesList, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movieList} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}